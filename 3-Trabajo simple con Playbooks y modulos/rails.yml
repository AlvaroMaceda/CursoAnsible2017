---

- name: Workaround for relative private keys
  hosts: all
  gather_facts: no

  tasks:
    - name: Set  correct ssh key path
      set_fact:
        ansible_ssh_private_key_file: "{{ ansible_ssh_private_key_file | realpath }}"
      when: ansible_ssh_private_key_file is defined

- name: Prepare server to work with ansible
  hosts: all
  gather_facts: False
  become: true

  tasks:
    - name: install python 2
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)

- name: Upgrade server
  hosts: all
  become: true

  tasks:
    - apt:
        upgrade: dist
        update_cache: yes

- name: Create users
  hosts: all
  become: true

  tasks:

    - name: create deploy user v1
      user: name=deploy shell=/bin/bash groups=sudo append=yes
    #
    # - name: create deploy user v2
    #   user: >
    #     name=deploy
    #     shell=/bin/bash
    #     groups=sudo
    #     append=yes
    #
    # - name: create deploy user v3
    #   user:
    #     name: deploy
    #     shell: /bin/bash
    #     groups: sudo
    #     append: yes
    #
    # - name: create deploy user v4
    #   user: name=deploy shell=/bin/bash
    #   args:
    #     groups: sudo
    #     append: yes

- name: Install rbenv and build utilities
  hosts: all
  become: true

  tasks:
    - name: Update repositories cache and install rbenv
      apt:
        name: rbenv
        state: present
        update_cache: yes

    - name: Install build utilities
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - build-essential
        - libssl-dev
        - libreadline-dev
        - zlib1g-dev

- name: Configure rbenv
  hosts: all
  become: true
  become_user: deploy

  tasks:

    # echo 'eval "$(rbenv init -)"' >> ~/.bashrc
    - name: Automatically init rbenv
      lineinfile:
        # path: ~/.bashrc
        dest: ~/.bashrc
        regexp: eval "\$\(rbenv init -\)"
        line: eval "$(rbenv init -)"
        insertafter: EOF

    # git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins
    - name: Install rbenv ruby-build plugin
      git:
        repo: git://github.com/sstephenson/ruby-build.git
        dest: ~/.rbenv/plugins/ruby-build

    # rbenv install 2.4.0
    - name: Install ruby 2.4.0
    # - name: This command will change the working directory to somedir/ and will only run when /path/to/database doesn't exist.
      command: /usr/bin/rbenv install 2.4.0
      # args:
      #   creates: /path/to/database

    # rbenv global 2.4.0
    # - name: Make 2.4.0 global

    # gem install bundler
    # - name: Install bundler

    # rbenv rehash
    # - name: Rehash rbenv
